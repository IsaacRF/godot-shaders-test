[gd_resource type="VisualShader" load_steps=3 format=3 uid="uid://haxlv4qpsra1"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_065co"]
expanded_output_ports = [0]
input_name = "color"

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_otjlj"]
default_input_values = [0, 0.0, 1, 0.8, 2, 0.15, 3, Vector3(0, 0, 1), 4, Vector3(0, 0, 0), 5, Vector3(0, 0, 0)]

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;




void fragment() {
// Input:2
	vec4 n_out2p0 = COLOR;
	float n_out2p2 = n_out2p0.g;


	vec3 n_out3p0;
// If:3
	float n_in3p1 = 0.80000;
	float n_in3p2 = 0.15000;
	vec3 n_in3p3 = vec3(0.00000, 0.00000, 1.00000);
	if(abs(n_out2p2 - n_in3p1) < n_in3p2)
	{
		n_out3p0 = n_in3p3;
	}
	else if(n_out2p2 < n_in3p1)
	{
		n_out3p0 = vec3(n_out2p0.xyz);
	}
	else
	{
		n_out3p0 = vec3(n_out2p0.xyz);
	}


// Output:0
	COLOR.rgb = n_out3p0;


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(1140, 140)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_065co")
nodes/fragment/2/position = Vector2(120, 200)
nodes/fragment/3/node = SubResource("VisualShaderNodeIf_otjlj")
nodes/fragment/3/position = Vector2(740, 180)
nodes/fragment/connections = PackedInt32Array(2, 2, 3, 0, 2, 0, 3, 4, 2, 0, 3, 5, 3, 0, 0, 0)
